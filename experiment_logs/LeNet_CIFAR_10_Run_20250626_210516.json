{
    "experiment_id": "LeNet_CIFAR_10_Run_20250626_210516",
    "date_time_started": "2025-06-26T21:05:16.540313",
    "description": "Baseline LeNet-like model on CIFAR-10 with default Adam parameters and added logging.",
    "hardware": {
        "device": "cpu",
        "cpu_cores": 4
    },
    "software_env": {
        "python_version": "3.12.2",
        "pytorch_version": "2.7.1+cpu",
        "torchvision_version": "0.22.1+cpu"
    },
    "hyperparameters": {
        "batch_size": 64,
        "learning_rate": 0.001,
        "num_epochs": 2,
        "optimizer_name": "Adam",
        "optimizer_params": {
            "lr": 0.001,
            "betas": [
                0.9,
                0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false,
            "maximize": false,
            "foreach": null,
            "capturable": false,
            "differentiable": false,
            "fused": null,
            "decoupled_weight_decay": false
        },
        "loss_function_name": "CrossEntropyLoss"
    },
    "dataset": {
        "name": "CIFAR-10",
        "transformations": [
            "ToTensor()",
            "Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.2471, 0.2435, 0.2616))",
            "RandomVerticalFlip(p=0.5)",
            "RandomRotation(degrees=[-30.0, 30.0], interpolation=nearest, expand=False, fill=0)"
        ],
        "normalization_mean": [
            [
                0.4914,
                0.4822,
                0.4465
            ]
        ],
        "normalization_std": [
            [
                0.2471,
                0.2435,
                0.2616
            ]
        ],
        "train_samples": 50000,
        "test_samples": 10000,
        "num_train_batches": 782,
        "num_test_batches": 157,
        "class_distribution_train": {
            "0": 5000,
            "1": 5000,
            "2": 5000,
            "3": 5000,
            "4": 5000,
            "5": 5000,
            "6": 5000,
            "7": 5000,
            "8": 5000,
            "9": 5000
        }
    },
    "model_architecture": {
        "name": "LeNetLike",
        "total_trainable_parameters": 198698,
        "layers": [
            {
                "type": "Conv2d",
                "name": "conv1",
                "input_shape": "[1, 3, 32, 32]",
                "in_channels": 3,
                "out_channels": 6,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 6, 28, 28]"
            },
            {
                "type": "ReLU",
                "name": "relu_1",
                "activation": "ReLU",
                "input_shape": "[1, 6, 28, 28]",
                "output_shape": "[1, 6, 28, 28]"
            },
            {
                "type": "Conv2d",
                "name": "conv2",
                "input_shape": "[1, 6, 14, 14]",
                "in_channels": 6,
                "out_channels": 16,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 16, 10, 10]"
            },
            {
                "type": "ReLU",
                "name": "relu_2",
                "activation": "ReLU",
                "input_shape": "[1, 16, 10, 10]",
                "output_shape": "[1, 16, 10, 10]"
            },
            {
                "type": "Conv2d",
                "name": "conv3",
                "input_shape": "[1, 16, 5, 5]",
                "in_channels": 16,
                "out_channels": 120,
                "kernel_size": "(4, 4)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 120, 2, 2]"
            },
            {
                "type": "ReLU",
                "name": "relu_3",
                "activation": "ReLU",
                "input_shape": "[1, 120, 2, 2]",
                "output_shape": "[1, 120, 2, 2]"
            },
            {
                "type": "Flatten",
                "name": "flatten_op",
                "input_shape": "[1, 120, 2, 2]",
                "output_shape": "[1, 480]"
            },
            {
                "type": "Linear",
                "name": "fc1",
                "input_shape": "[1, 480]",
                "in_features": 480,
                "out_features": 336,
                "output_shape": "[1, 336]"
            },
            {
                "type": "ReLU",
                "name": "relu_4",
                "activation": "ReLU",
                "input_shape": "[1, 336]",
                "output_shape": "[1, 336]"
            },
            {
                "type": "Linear",
                "name": "fc2",
                "input_shape": "[1, 336]",
                "in_features": 336,
                "out_features": 10,
                "output_shape": "[1, 10]"
            }
        ]
    },
    "training_results": {
        "train_losses_per_epoch": "[1.7634156318881629, 1.5414245898461403]",
        "test_losses_per_epoch": "[1.5569127448804818, 1.4862000600547547]",
        "test_accuracies_per_epoch": "[43.32, 46.25]",
        "test_precisions_macro_per_epoch": "[0.4354634055877796, 0.4742456867731872]",
        "test_recalls_macro_per_epoch": "[0.4332, 0.4625]",
        "test_f1_scores_macro_per_epoch": "[0.42257886466709654, 0.4608556988074004]",
        "test_roc_auc_macro_per_epoch": "[None, None]",
        "total_training_time_seconds": 146.37697577476501,
        "avg_time_per_epoch_seconds": 73.18848788738251
    },
    "final_evaluation_metrics": {
        "best_epoch_details": {
            "epoch_number": 2,
            "test_accuracy": 46.25,
            "test_loss": 1.4862000600547547,
            "precision_macro_avg": 0.4742456867731872,
            "recall_macro_avg": 0.4608556988074004,
            "f1_score_macro_avg": 0.4608556988074004,
            "roc_auc_macro_avg": null,
            "confusion_matrix_at_best_epoch": "[[516, 54, 102, 39, 16, 18, 32, 56, 85, 82], [41, 462, 25, 15, 2, 10, 54, 59, 29, 303], [52, 13, 291, 80, 237, 75, 117, 89, 25, 21], [10, 8, 71, 315, 76, 199, 144, 121, 15, 41], [33, 7, 115, 68, 432, 45, 160, 117, 7, 16], [6, 5, 72, 207, 67, 404, 77, 132, 12, 18], [2, 7, 45, 97, 97, 27, 664, 31, 7, 23], [12, 3, 46, 93, 95, 88, 59, 551, 7, 46], [188, 70, 42, 23, 22, 29, 22, 45, 427, 132], [38, 106, 18, 42, 13, 11, 86, 94, 29, 563]]"
        },
        "overall_accuracy_last_epoch": 46.089999999999996,
        "confusion_matrix_last_epoch": "[[509, 51, 119, 30, 15, 12, 32, 62, 80, 90], [47, 482, 29, 11, 4, 8, 49, 62, 23, 285], [50, 11, 305, 74, 245, 73, 113, 87, 24, 18], [12, 10, 69, 306, 66, 207, 152, 116, 14, 48], [26, 9, 123, 71, 432, 55, 155, 100, 14, 15], [6, 7, 74, 209, 68, 387, 80, 137, 15, 17], [1, 14, 43, 93, 110, 25, 648, 34, 11, 21], [11, 6, 54, 94, 95, 85, 54, 544, 9, 48], [179, 70, 36, 27, 28, 35, 21, 36, 430, 138], [37, 114, 19, 39, 11, 13, 80, 89, 32, 566]]",
        "precision_macro_avg_last_epoch": 0.47169588403155754,
        "recall_macro_avg_last_epoch": 0.4609,
        "f1_score_macro_avg_last_epoch": 0.45967998575727453,
        "roc_auc_macro_avg_last_epoch": null,
        "per_class_metrics_last_epoch": {
            "0": {
                "precision": 0.5797266514806378,
                "recall": 0.509,
                "f1_score": 0.5420660276890309
            },
            "1": {
                "precision": 0.6227390180878553,
                "recall": 0.482,
                "f1_score": 0.5434047350620068
            },
            "2": {
                "precision": 0.35017221584385766,
                "recall": 0.305,
                "f1_score": 0.3260288615713522
            },
            "3": {
                "precision": 0.32075471698113206,
                "recall": 0.306,
                "f1_score": 0.3132036847492323
            },
            "4": {
                "precision": 0.4022346368715084,
                "recall": 0.432,
                "f1_score": 0.4165863066538091
            },
            "5": {
                "precision": 0.43,
                "recall": 0.387,
                "f1_score": 0.4073684210526316
            },
            "6": {
                "precision": 0.4682080924855491,
                "recall": 0.648,
                "f1_score": 0.5436241610738255
            },
            "7": {
                "precision": 0.4293606945540647,
                "recall": 0.544,
                "f1_score": 0.4799294221438024
            },
            "8": {
                "precision": 0.6595092024539877,
                "recall": 0.43,
                "f1_score": 0.5205811138014528
            },
            "9": {
                "precision": 0.45425361155698235,
                "recall": 0.566,
                "f1_score": 0.5040071237756011
            }
        }
    },
    "notes_observations": "Initial run of LeNet-like model. Achieved good accuracy. Consider more epochs or data augmentation next."
}