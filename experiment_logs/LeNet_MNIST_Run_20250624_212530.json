{
    "experiment_id": "LeNet_MNIST_Run_20250624_212530",
    "date_time_started": "2025-06-24T21:25:30.868181",
    "description": "Baseline LeNet-like model on MNIST with default Adam parameters and added logging.",
    "hardware": {
        "device": "cpu",
        "cpu_cores": 4
    },
    "software_env": {
        "python_version": "3.12.2",
        "pytorch_version": "2.7.1+cpu",
        "torchvision_version": "0.22.1+cpu"
    },
    "hyperparameters": {
        "batch_size": 64,
        "learning_rate": 0.001,
        "num_epochs": 5,
        "optimizer_name": "Adam",
        "loss_function_name": "CrossEntropyLoss",
        "optimizer_params": {
            "lr": 0.001,
            "betas": [
                0.9,
                0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false,
            "maximize": false,
            "foreach": null,
            "capturable": false,
            "differentiable": false,
            "fused": null,
            "decoupled_weight_decay": false
        }
    },
    "dataset": {
        "name": "MNIST",
        "transformations": [
            "ToTensor()",
            "Normalize(mean=(0.1307,), std=(0.3081,))"
        ],
        "normalization_mean": [
            0.1307
        ],
        "normalization_std": [
            0.3081
        ],
        "train_samples": 60000,
        "test_samples": 10000,
        "num_train_batches": 938,
        "num_test_batches": 157,
        "class_distribution_train": {
            "0": 5923,
            "1": 6742,
            "2": 5958,
            "3": 6131,
            "4": 5842,
            "5": 5421,
            "6": 5918,
            "7": 6265,
            "8": 5851,
            "9": 5949
        }
    },
    "model_architecture": {
        "name": "LeNetLike",
        "total_trainable_parameters": 23188,
        "layers": [
            {
                "type": "Conv2d",
                "name": "conv1",
                "input_shape": "[1, 1, 28, 28]",
                "in_channels": 1,
                "out_channels": 3,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 3, 24, 24]"
            },
            {
                "type": "Tanh",
                "name": "tanh_1",
                "activation": "Tanh",
                "input_shape": "[1, 3, 24, 24]",
                "output_shape": "[1, 3, 24, 24]"
            },
            {
                "type": "Conv2d",
                "name": "conv2",
                "input_shape": "[1, 3, 12, 12]",
                "in_channels": 3,
                "out_channels": 6,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 6, 8, 8]"
            },
            {
                "type": "Tanh",
                "name": "tanh_2",
                "activation": "Tanh",
                "input_shape": "[1, 6, 8, 8]",
                "output_shape": "[1, 6, 8, 8]"
            },
            {
                "type": "Conv2d",
                "name": "conv3",
                "input_shape": "[1, 6, 4, 4]",
                "in_channels": 6,
                "out_channels": 120,
                "kernel_size": "(4, 4)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "Tanh",
                "name": "tanh_3",
                "activation": "Tanh",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "Flatten",
                "name": "flatten_op",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120]"
            },
            {
                "type": "Linear",
                "name": "fc1",
                "input_shape": "[1, 120]",
                "in_features": 120,
                "out_features": 84,
                "output_shape": "[1, 84]"
            },
            {
                "type": "Tanh",
                "name": "tanh_4",
                "activation": "Tanh",
                "input_shape": "[1, 84]",
                "output_shape": "[1, 84]"
            },
            {
                "type": "Linear",
                "name": "fc2",
                "input_shape": "[1, 84]",
                "in_features": 84,
                "out_features": 10,
                "output_shape": "[1, 10]"
            }
        ]
    },
    "training_results": {
        "train_losses_per_epoch": "[0.33508453623397644, 0.11296053851164306, 0.07712977087008022, 0.0616761231020506, 0.052633763507638036]",
        "test_losses_per_epoch": "[0.1462232061056717, 0.09054107135191418, 0.06053101416353943, 0.057248598949354926, 0.05121041384931938]",
        "test_accuracies_per_epoch": "[95.58, 97.16, 98.0, 98.24000000000001, 98.37]",
        "test_precisions_macro_per_epoch": "[0.9555027739942957, 0.9716130968437436, 0.9800775875708109, 0.9825271641897757, 0.9835281410242983]",
        "test_recalls_macro_per_epoch": "[0.9557804117212996, 0.9717212742817614, 0.9799086774517838, 0.9823291855618788, 0.9836480285066237]",
        "test_f1_scores_macro_per_epoch": "[0.9554082250185771, 0.9715460780218461, 0.9799722735423696, 0.9823867017819667, 0.983559249053091]",
        "test_roc_auc_macro_per_epoch": "[None, None, None, None, None]",
        "total_training_time_seconds": 99.01132798194885,
        "avg_time_per_epoch_seconds": 19.80226559638977
    },
    "final_evaluation_metrics": {
        "best_epoch_details": {
            "epoch_number": 5,
            "test_accuracy": 98.37,
            "test_loss": 0.05121041384931938,
            "precision_macro_avg": 0.9835281410242983,
            "recall_macro_avg": 0.9836480285066237,
            "f1_score_macro_avg": 0.983559249053091,
            "roc_auc_macro_avg": null,
            "confusion_matrix_at_best_epoch": "[[973, 0, 0, 0, 0, 1, 2, 1, 2, 1], [0, 1127, 2, 2, 0, 0, 2, 1, 1, 0], [4, 1, 1017, 5, 1, 0, 0, 3, 1, 0], [0, 0, 0, 988, 1, 12, 0, 2, 1, 6], [0, 0, 3, 0, 970, 0, 1, 1, 0, 7], [1, 0, 0, 3, 0, 884, 2, 1, 1, 0], [4, 2, 1, 0, 1, 8, 940, 0, 2, 0], [2, 1, 8, 5, 0, 0, 0, 1009, 0, 3], [7, 1, 1, 5, 1, 5, 0, 5, 945, 4], [4, 2, 0, 1, 8, 1, 0, 6, 3, 984]]"
        },
        "overall_accuracy_last_epoch": 98.37,
        "confusion_matrix_last_epoch": "[[973, 0, 0, 0, 0, 1, 2, 1, 2, 1], [0, 1127, 2, 2, 0, 0, 2, 1, 1, 0], [4, 1, 1017, 5, 1, 0, 0, 3, 1, 0], [0, 0, 0, 988, 1, 12, 0, 2, 1, 6], [0, 0, 3, 0, 970, 0, 1, 1, 0, 7], [1, 0, 0, 3, 0, 884, 2, 1, 1, 0], [4, 2, 1, 0, 1, 8, 940, 0, 2, 0], [2, 1, 8, 5, 0, 0, 0, 1009, 0, 3], [7, 1, 1, 5, 1, 5, 0, 5, 945, 4], [4, 2, 0, 1, 8, 1, 0, 6, 3, 984]]",
        "precision_macro_avg_last_epoch": 0.9835281410242983,
        "recall_macro_avg_last_epoch": 0.9836480285066237,
        "f1_score_macro_avg_last_epoch": 0.983559249053091,
        "roc_auc_macro_avg_last_epoch": null,
        "per_class_metrics_last_epoch": {
            "0": {
                "precision": 0.9778894472361809,
                "recall": 0.9928571428571429,
                "f1_score": 0.9853164556962025
            },
            "1": {
                "precision": 0.9938271604938271,
                "recall": 0.9929515418502203,
                "f1_score": 0.9933891582194799
            },
            "2": {
                "precision": 0.9854651162790697,
                "recall": 0.9854651162790697,
                "f1_score": 0.9854651162790697
            },
            "3": {
                "precision": 0.979187314172448,
                "recall": 0.9782178217821782,
                "f1_score": 0.9787023278850916
            },
            "4": {
                "precision": 0.9877800407331976,
                "recall": 0.9877800407331976,
                "f1_score": 0.9877800407331976
            },
            "5": {
                "precision": 0.9703622392974753,
                "recall": 0.9910313901345291,
                "f1_score": 0.9805879090404881
            },
            "6": {
                "precision": 0.9926082365364308,
                "recall": 0.9812108559498957,
                "f1_score": 0.9868766404199475
            },
            "7": {
                "precision": 0.9805636540330418,
                "recall": 0.9815175097276264,
                "f1_score": 0.9810403500243072
            },
            "8": {
                "precision": 0.9884937238493724,
                "recall": 0.9702258726899384,
                "f1_score": 0.9792746113989638
            },
            "9": {
                "precision": 0.9791044776119403,
                "recall": 0.9752229930624381,
                "f1_score": 0.9771598808341608
            }
        }
    },
    "notes_observations": "Initial run of LeNet-like model. Achieved good accuracy. Consider more epochs or data augmentation next."
}