{
    "experiment_id": "LeNet_MNIST_Run_20250624_210723",
    "date_time_started": "2025-06-24T21:07:23.592978",
    "description": "Baseline LeNet-like model on MNIST with default Adam parameters and added logging.",
    "hardware": {
        "device": "cpu",
        "cpu_cores": 4
    },
    "software_env": {
        "python_version": "3.12.2",
        "pytorch_version": "2.7.1+cpu",
        "torchvision_version": "0.22.1+cpu"
    },
    "hyperparameters": {
        "batch_size": 64,
        "learning_rate": 0.001,
        "num_epochs": 5,
        "optimizer_name": "Adam",
        "loss_function_name": "CrossEntropyLoss",
        "optimizer_params": {
            "lr": 0.001,
            "betas": [
                0.9,
                0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false,
            "maximize": false,
            "foreach": null,
            "capturable": false,
            "differentiable": false,
            "fused": null,
            "decoupled_weight_decay": false
        }
    },
    "dataset": {
        "name": "MNIST",
        "transformations": [
            "ToTensor()",
            "Normalize(mean=(0.1307,), std=(0.3081,))"
        ],
        "normalization_mean": [
            0.1307
        ],
        "normalization_std": [
            0.3081
        ],
        "train_samples": 60000,
        "test_samples": 10000,
        "num_train_batches": 938,
        "num_test_batches": 157,
        "class_distribution_train": {
            "0": 5923,
            "1": 6742,
            "2": 5958,
            "3": 6131,
            "4": 5842,
            "5": 5421,
            "6": 5918,
            "7": 6265,
            "8": 5851,
            "9": 5949
        }
    },
    "model_architecture": {
        "name": "LeNetLike",
        "total_trainable_parameters": 44426,
        "layers": [
            {
                "type": "Conv2d",
                "name": "conv1",
                "input_shape": "[1, 1, 28, 28]",
                "in_channels": 1,
                "out_channels": 6,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 6, 24, 24]"
            },
            {
                "type": "Tanh",
                "name": "tanh_1",
                "activation": "Tanh",
                "input_shape": "[1, 6, 24, 24]",
                "output_shape": "[1, 6, 24, 24]"
            },
            {
                "type": "Conv2d",
                "name": "conv2",
                "input_shape": "[1, 6, 12, 12]",
                "in_channels": 6,
                "out_channels": 16,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 16, 8, 8]"
            },
            {
                "type": "Tanh",
                "name": "tanh_2",
                "activation": "Tanh",
                "input_shape": "[1, 16, 8, 8]",
                "output_shape": "[1, 16, 8, 8]"
            },
            {
                "type": "Conv2d",
                "name": "conv3",
                "input_shape": "[1, 16, 4, 4]",
                "in_channels": 16,
                "out_channels": 120,
                "kernel_size": "(4, 4)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "Tanh",
                "name": "tanh_3",
                "activation": "Tanh",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "Flatten",
                "name": "flatten_op",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120]"
            },
            {
                "type": "Linear",
                "name": "fc1",
                "input_shape": "[1, 120]",
                "in_features": 120,
                "out_features": 84,
                "output_shape": "[1, 84]"
            },
            {
                "type": "Tanh",
                "name": "tanh_4",
                "activation": "Tanh",
                "input_shape": "[1, 84]",
                "output_shape": "[1, 84]"
            },
            {
                "type": "Linear",
                "name": "fc2",
                "input_shape": "[1, 84]",
                "in_features": 84,
                "out_features": 10,
                "output_shape": "[1, 10]"
            }
        ]
    },
    "training_results": {
        "train_losses_per_epoch": "[0.25405001576775427, 0.07175332854967564, 0.05074892700552992, 0.04010926950688182, 0.03313018954835578]",
        "test_losses_per_epoch": "[0.08257737638470332, 0.04519094945937039, 0.04109311397343127, 0.03764448166308794, 0.03542526970802106]",
        "test_accuracies_per_epoch": "[97.39, 98.45, 98.68, 98.85000000000001, 98.83]",
        "test_precisions_macro_per_epoch": "[0.9740248479422331, 0.9844708870501162, 0.9867445296863684, 0.988500282922432, 0.988496133807832]",
        "test_recalls_macro_per_epoch": "[0.9735781716012146, 0.9843734913698832, 0.9866978502647609, 0.9883968145103911, 0.9881452959167174]",
        "test_f1_scores_macro_per_epoch": "[0.9737136556171164, 0.9843992568867543, 0.9866816886981408, 0.988433754616598, 0.9882633649419736]",
        "test_roc_auc_macro_per_epoch": "[None, None, None, None, None]",
        "total_training_time_seconds": 130.11597609519958,
        "avg_time_per_epoch_seconds": 26.023195219039916
    },
    "final_evaluation_metrics": {
        "best_epoch_details": {
            "epoch_number": 4,
            "test_accuracy": 98.85000000000001,
            "test_loss": 0.03764448166308794,
            "precision_macro_avg": 0.988500282922432,
            "recall_macro_avg": 0.9883968145103911,
            "f1_score_macro_avg": 0.988433754616598,
            "roc_auc_macro_avg": null,
            "confusion_matrix_at_best_epoch": "[[975, 0, 0, 0, 0, 0, 2, 1, 1, 1], [0, 1130, 1, 0, 0, 1, 2, 1, 0, 0], [1, 0, 1026, 0, 1, 0, 0, 2, 2, 0], [0, 0, 3, 996, 0, 4, 0, 3, 3, 1], [0, 0, 0, 0, 961, 0, 5, 2, 2, 12], [0, 0, 0, 4, 0, 885, 1, 1, 0, 1], [6, 1, 1, 0, 1, 4, 943, 0, 2, 0], [0, 2, 4, 0, 0, 0, 0, 1019, 1, 2], [4, 0, 4, 2, 1, 0, 0, 2, 960, 1], [1, 3, 2, 0, 3, 0, 0, 9, 1, 990]]"
        },
        "overall_accuracy_last_epoch": 98.83,
        "confusion_matrix_last_epoch": "[[976, 0, 0, 0, 0, 0, 3, 1, 0, 0], [0, 1130, 1, 1, 0, 0, 1, 2, 0, 0], [1, 1, 1021, 4, 1, 0, 0, 4, 0, 0], [0, 0, 0, 1007, 0, 0, 0, 2, 1, 0], [0, 1, 0, 0, 976, 0, 3, 0, 0, 2], [0, 0, 0, 11, 0, 878, 2, 0, 0, 1], [5, 2, 1, 0, 2, 4, 943, 0, 1, 0], [0, 2, 3, 3, 0, 0, 0, 1020, 0, 0], [2, 0, 4, 5, 2, 0, 1, 2, 956, 2], [0, 3, 0, 10, 8, 0, 1, 10, 1, 976]]",
        "precision_macro_avg_last_epoch": 0.988496133807832,
        "recall_macro_avg_last_epoch": 0.9881452959167174,
        "f1_score_macro_avg_last_epoch": 0.9882633649419736,
        "roc_auc_macro_avg_last_epoch": null,
        "per_class_metrics_last_epoch": {
            "0": {
                "precision": 0.991869918699187,
                "recall": 0.9959183673469387,
                "f1_score": 0.9938900203665988
            },
            "1": {
                "precision": 0.9920983318700615,
                "recall": 0.9955947136563876,
                "f1_score": 0.9938434476693052
            },
            "2": {
                "precision": 0.9912621359223301,
                "recall": 0.9893410852713178,
                "f1_score": 0.9903006789524733
            },
            "3": {
                "precision": 0.9673390970220941,
                "recall": 0.997029702970297,
                "f1_score": 0.9819600195026816
            },
            "4": {
                "precision": 0.9868554095045501,
                "recall": 0.9938900203665988,
                "f1_score": 0.9903602232369355
            },
            "5": {
                "precision": 0.9954648526077098,
                "recall": 0.984304932735426,
                "f1_score": 0.9898534385569335
            },
            "6": {
                "precision": 0.9884696016771488,
                "recall": 0.9843423799582464,
                "f1_score": 0.9864016736401674
            },
            "7": {
                "precision": 0.9798270893371758,
                "recall": 0.9922178988326849,
                "f1_score": 0.985983566940551
            },
            "8": {
                "precision": 0.9968717413972888,
                "recall": 0.9815195071868583,
                "f1_score": 0.9891360579410243
            },
            "9": {
                "precision": 0.9949031600407747,
                "recall": 0.9672943508424182,
                "f1_score": 0.9809045226130654
            }
        }
    },
    "notes_observations": "Initial run of LeNet-like model. Achieved good accuracy. Consider more epochs or data augmentation next."
}