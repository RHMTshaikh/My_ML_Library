{
    "experiment_id": "LeNet_MNIST_Run_20250625_105846",
    "date_time_started": "2025-06-25T10:58:46.388158",
    "description": "Baseline LeNet-like model on MNIST with default Adam parameters and added logging.    With no normalisation of data.",
    "hardware": {
        "device": "cpu",
        "cpu_cores": 4
    },
    "software_env": {
        "python_version": "3.12.2",
        "pytorch_version": "2.7.1+cpu",
        "torchvision_version": "0.22.1+cpu"
    },
    "hyperparameters": {
        "batch_size": 64,
        "learning_rate": 0.001,
        "num_epochs": 5,
        "optimizer_name": "Adam",
        "optimizer_params": {
            "lr": 0.001,
            "betas": [
                0.9,
                0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false,
            "maximize": false,
            "foreach": null,
            "capturable": false,
            "differentiable": false,
            "fused": null,
            "decoupled_weight_decay": false
        },
        "loss_function_name": "CrossEntropyLoss"
    },
    "dataset": {
        "name": "MNIST",
        "transformations": [
            "ToTensor()"
        ],
        "train_samples": 60000,
        "test_samples": 10000,
        "num_train_batches": 938,
        "num_test_batches": 157,
        "class_distribution_train": {
            "0": 5923,
            "1": 6742,
            "2": 5958,
            "3": 6131,
            "4": 5842,
            "5": 5421,
            "6": 5918,
            "7": 6265,
            "8": 5851,
            "9": 5949
        }
    },
    "model_architecture": {
        "name": "LeNetLike",
        "total_trainable_parameters": 23188,
        "layers": [
            {
                "type": "Conv2d",
                "name": "conv1",
                "input_shape": "[1, 1, 28, 28]",
                "in_channels": 1,
                "out_channels": 3,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 3, 24, 24]"
            },
            {
                "type": "ReLU",
                "name": "relu_1",
                "activation": "ReLU",
                "input_shape": "[1, 3, 24, 24]",
                "output_shape": "[1, 3, 24, 24]"
            },
            {
                "type": "Conv2d",
                "name": "conv2",
                "input_shape": "[1, 3, 12, 12]",
                "in_channels": 3,
                "out_channels": 6,
                "kernel_size": "(5, 5)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 6, 8, 8]"
            },
            {
                "type": "ReLU",
                "name": "relu_2",
                "activation": "ReLU",
                "input_shape": "[1, 6, 8, 8]",
                "output_shape": "[1, 6, 8, 8]"
            },
            {
                "type": "Conv2d",
                "name": "conv3",
                "input_shape": "[1, 6, 4, 4]",
                "in_channels": 6,
                "out_channels": 120,
                "kernel_size": "(4, 4)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "ReLU",
                "name": "relu_3",
                "activation": "ReLU",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120, 1, 1]"
            },
            {
                "type": "Flatten",
                "name": "flatten_op",
                "input_shape": "[1, 120, 1, 1]",
                "output_shape": "[1, 120]"
            },
            {
                "type": "Linear",
                "name": "fc1",
                "input_shape": "[1, 120]",
                "in_features": 120,
                "out_features": 84,
                "output_shape": "[1, 84]"
            },
            {
                "type": "ReLU",
                "name": "relu_4",
                "activation": "ReLU",
                "input_shape": "[1, 84]",
                "output_shape": "[1, 84]"
            },
            {
                "type": "Linear",
                "name": "fc2",
                "input_shape": "[1, 84]",
                "in_features": 84,
                "out_features": 10,
                "output_shape": "[1, 10]"
            }
        ]
    },
    "training_results": {
        "train_losses_per_epoch": "[0.48032198140203064, 0.15404529581025148, 0.10741221018409583, 0.0845515703725845, 0.07086395350958048]",
        "test_losses_per_epoch": "[0.17584636851338445, 0.1018235529305793, 0.0828909754075012, 0.06558275050212997, 0.06878662110830192]",
        "test_accuracies_per_epoch": "[94.58, 96.67999999999999, 97.39999999999999, 97.82, 97.68]",
        "test_precisions_macro_per_epoch": "[0.9456545913898056, 0.9667233517524227, 0.9741672554182875, 0.9780840806018455, 0.9767520332477672]",
        "test_recalls_macro_per_epoch": "[0.9452928081911475, 0.966590538775959, 0.9737061647490576, 0.9780885606646308, 0.9765030740176581]",
        "test_f1_scores_macro_per_epoch": "[0.9452415496618565, 0.9665258547255204, 0.9738222792715581, 0.9780558866339775, 0.9764935255449328]",
        "test_roc_auc_macro_per_epoch": "[None, None, None, None, None]",
        "total_training_time_seconds": 125.18156170845032,
        "avg_time_per_epoch_seconds": 25.036312341690063
    },
    "final_evaluation_metrics": {
        "best_epoch_details": {
            "epoch_number": 4,
            "test_accuracy": 97.82,
            "test_loss": 0.06558275050212997,
            "precision_macro_avg": 0.9780840806018455,
            "recall_macro_avg": 0.9780558866339775,
            "f1_score_macro_avg": 0.9780558866339775,
            "roc_auc_macro_avg": null,
            "confusion_matrix_at_best_epoch": "[[967, 0, 1, 0, 0, 3, 3, 1, 4, 1], [0, 1125, 1, 0, 0, 0, 1, 2, 6, 0], [6, 2, 1007, 4, 1, 0, 0, 7, 5, 0], [0, 1, 5, 991, 0, 6, 0, 3, 4, 0], [3, 0, 6, 0, 953, 0, 7, 2, 1, 10], [4, 0, 1, 8, 0, 872, 4, 1, 2, 0], [5, 2, 0, 1, 0, 3, 945, 0, 2, 0], [1, 1, 12, 2, 1, 0, 0, 1004, 2, 5], [2, 0, 3, 4, 1, 4, 2, 2, 954, 2], [5, 4, 2, 5, 14, 3, 1, 7, 4, 964]]"
        },
        "overall_accuracy_last_epoch": 97.68,
        "confusion_matrix_last_epoch": "[[966, 0, 0, 0, 2, 2, 1, 1, 2, 6], [0, 1128, 1, 1, 0, 1, 1, 1, 2, 0], [1, 3, 1016, 2, 1, 0, 0, 6, 2, 1], [0, 1, 2, 998, 0, 5, 0, 3, 0, 1], [0, 0, 2, 0, 961, 0, 3, 3, 0, 13], [2, 0, 1, 8, 0, 877, 2, 1, 0, 1], [6, 2, 0, 1, 5, 15, 927, 0, 1, 1], [0, 3, 12, 3, 0, 0, 0, 999, 2, 9], [6, 0, 4, 21, 1, 16, 1, 5, 914, 6], [2, 3, 1, 6, 7, 4, 0, 4, 0, 982]]",
        "precision_macro_avg_last_epoch": 0.9767520332477672,
        "recall_macro_avg_last_epoch": 0.9765030740176581,
        "f1_score_macro_avg_last_epoch": 0.9764935255449328,
        "roc_auc_macro_avg_last_epoch": null,
        "per_class_metrics_last_epoch": {
            "0": {
                "precision": 0.982706002034588,
                "recall": 0.9857142857142858,
                "f1_score": 0.9842078451349975
            },
            "1": {
                "precision": 0.9894736842105263,
                "recall": 0.9938325991189427,
                "f1_score": 0.9916483516483516
            },
            "2": {
                "precision": 0.9778633301251203,
                "recall": 0.9844961240310077,
                "f1_score": 0.9811685176243361
            },
            "3": {
                "precision": 0.9596153846153846,
                "recall": 0.9881188118811881,
                "f1_score": 0.9736585365853658
            },
            "4": {
                "precision": 0.9836233367451381,
                "recall": 0.9786150712830958,
                "f1_score": 0.9811128126595202
            },
            "5": {
                "precision": 0.9532608695652174,
                "recall": 0.9831838565022422,
                "f1_score": 0.9679911699779249
            },
            "6": {
                "precision": 0.9914438502673797,
                "recall": 0.9676409185803758,
                "f1_score": 0.9793977812995246
            },
            "7": {
                "precision": 0.9765395894428153,
                "recall": 0.9717898832684825,
                "f1_score": 0.9741589468551926
            },
            "8": {
                "precision": 0.9902491874322861,
                "recall": 0.9383983572895277,
                "f1_score": 0.9636267791249341
            },
            "9": {
                "precision": 0.9627450980392157,
                "recall": 0.9732408325074331,
                "f1_score": 0.9679645145391819
            }
        }
    },
    "notes_observations": "Initial run of LeNet-like model. Achieved good accuracy. Consider more epochs or data augmentation next."
}