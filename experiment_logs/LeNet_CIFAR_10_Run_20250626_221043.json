{
    "experiment_id": "LeNet_CIFAR_10_Run_20250626_221043",
    "date_time_started": "2025-06-26T22:10:43.972410",
    "description": "Baseline LeNet-like model on CIFAR-10 with default Adam parameters and added logging.",
    "hardware": {
        "device": "cpu",
        "cpu_cores": 4
    },
    "software_env": {
        "python_version": "3.12.2",
        "pytorch_version": "2.7.1+cpu",
        "torchvision_version": "0.22.1+cpu"
    },
    "hyperparameters": {
        "batch_size": 64,
        "learning_rate": 0.001,
        "num_epochs": 5,
        "optimizer_name": "Adam",
        "optimizer_params": {
            "lr": 0.001,
            "betas": [
                0.9,
                0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false,
            "maximize": false,
            "foreach": null,
            "capturable": false,
            "differentiable": false,
            "fused": null,
            "decoupled_weight_decay": false
        },
        "loss_function_name": "CrossEntropyLoss"
    },
    "dataset": {
        "name": "CIFAR-10",
        "transformations": [
            "ToTensor()",
            "Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.2471, 0.2435, 0.2616))",
            "RandomVerticalFlip(p=0.5)",
            "RandomRotation(degrees=[-30.0, 30.0], interpolation=nearest, expand=False, fill=0)"
        ],
        "normalization_mean": [
            [
                0.4914,
                0.4822,
                0.4465
            ]
        ],
        "normalization_std": [
            [
                0.2471,
                0.2435,
                0.2616
            ]
        ],
        "train_samples": 50000,
        "test_samples": 10000,
        "num_train_batches": 782,
        "num_test_batches": 157,
        "class_distribution_train": {
            "0": 5000,
            "1": 5000,
            "2": 5000,
            "3": 5000,
            "4": 5000,
            "5": 5000,
            "6": 5000,
            "7": 5000,
            "8": 5000,
            "9": 5000
        }
    },
    "model_architecture": {
        "name": "MyNeuralNetwork",
        "total_trainable_parameters": 20759186,
        "layers": [
            {
                "type": "Conv2d",
                "name": "conv1",
                "input_shape": "[1, 3, 32, 32]",
                "in_channels": 3,
                "out_channels": 16,
                "kernel_size": "(3, 3)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 16, 30, 30]"
            },
            {
                "type": "ReLU",
                "name": "relu_1",
                "activation": "ReLU",
                "input_shape": "[1, 16, 30, 30]",
                "output_shape": "[1, 16, 30, 30]"
            },
            {
                "type": "Conv2d",
                "name": "conv2",
                "input_shape": "[1, 16, 15, 15]",
                "in_channels": 16,
                "out_channels": 128,
                "kernel_size": "(3, 3)",
                "stride": "(1, 1)",
                "padding": "(1, 1)",
                "output_shape": "[1, 128, 15, 15]"
            },
            {
                "type": "ReLU",
                "name": "relu_2",
                "activation": "ReLU",
                "input_shape": "[1, 128, 15, 15]",
                "output_shape": "[1, 128, 15, 15]"
            },
            {
                "type": "Conv2d",
                "name": "conv3",
                "input_shape": "[1, 128, 8, 8]",
                "in_channels": 128,
                "out_channels": 256,
                "kernel_size": "(3, 3)",
                "stride": "(1, 1)",
                "padding": "(0, 0)",
                "output_shape": "[1, 256, 6, 6]"
            },
            {
                "type": "ReLU",
                "name": "relu_3",
                "activation": "ReLU",
                "input_shape": "[1, 256, 6, 6]",
                "output_shape": "[1, 256, 6, 6]"
            },
            {
                "type": "Flatten",
                "name": "flatten_op",
                "input_shape": "[1, 256, 6, 6]",
                "output_shape": "[1, 9216]"
            },
            {
                "type": "Linear",
                "name": "fc1",
                "input_shape": "[1, 9216]",
                "in_features": 9216,
                "out_features": 2000,
                "output_shape": "[1, 2000]"
            },
            {
                "type": "ReLU",
                "name": "relu_4",
                "activation": "ReLU",
                "input_shape": "[1, 2000]",
                "output_shape": "[1, 2000]"
            },
            {
                "type": "Linear",
                "name": "fc2",
                "input_shape": "[1, 2000]",
                "in_features": 2000,
                "out_features": 1000,
                "output_shape": "[1, 1000]"
            },
            {
                "type": "ReLU",
                "name": "relu_5",
                "activation": "ReLU",
                "input_shape": "[1, 1000]",
                "output_shape": "[1, 1000]"
            },
            {
                "type": "Linear",
                "name": "fc3",
                "input_shape": "[1, 1000]",
                "in_features": 1000,
                "out_features": 10,
                "output_shape": "[1, 10]"
            }
        ]
    },
    "training_results": {
        "train_losses_per_epoch": "[1.6407426956974331, 1.3362357315352507, 1.2093244258247677, 1.1075127508939075, 1.0394420624541505]",
        "test_losses_per_epoch": "[1.3720983695832027, 1.2559856973635923, 1.1971816113040705, 1.1244905150620041, 1.048096492411984]",
        "test_accuracies_per_epoch": "[50.33, 54.449999999999996, 56.730000000000004, 59.489999999999995, 62.470000000000006]",
        "test_precisions_macro_per_epoch": "[0.5021097584290375, 0.56058014442971, 0.5792019354531497, 0.6042226354412129, 0.6286029599366586]",
        "test_recalls_macro_per_epoch": "[0.5033000000000001, 0.5445, 0.5673, 0.5949, 0.6247]",
        "test_f1_scores_macro_per_epoch": "[0.4949516720914273, 0.5416975351741901, 0.5581194694916648, 0.589644400180737, 0.6251266194352976]",
        "test_roc_auc_macro_per_epoch": "[None, None, None, None, None]",
        "total_training_time_seconds": 2259.540143966675,
        "avg_time_per_epoch_seconds": 451.90802879333495
    },
    "final_evaluation_metrics": {
        "best_epoch_details": {
            "epoch_number": 5,
            "test_accuracy": 62.470000000000006,
            "test_loss": 1.048096492411984,
            "precision_macro_avg": 0.6286029599366586,
            "recall_macro_avg": 0.6251266194352976,
            "f1_score_macro_avg": 0.6251266194352976,
            "roc_auc_macro_avg": null,
            "confusion_matrix_at_best_epoch": "[[687, 25, 63, 28, 6, 6, 5, 18, 101, 61], [30, 761, 12, 19, 1, 5, 12, 12, 27, 121], [79, 7, 528, 85, 105, 51, 54, 54, 22, 15], [25, 17, 104, 501, 44, 154, 64, 50, 20, 21], [24, 9, 128, 73, 484, 45, 73, 143, 15, 6], [15, 5, 73, 268, 29, 498, 13, 55, 21, 23], [4, 8, 53, 102, 68, 18, 703, 23, 5, 16], [20, 11, 27, 90, 53, 77, 15, 672, 6, 29], [81, 47, 34, 22, 5, 11, 8, 9, 721, 62], [28, 167, 14, 27, 5, 10, 15, 10, 32, 692]]"
        },
        "overall_accuracy_last_epoch": 62.2,
        "confusion_matrix_last_epoch": "[[669, 31, 57, 32, 9, 3, 10, 21, 111, 57], [27, 748, 14, 20, 1, 8, 8, 21, 33, 120], [71, 5, 526, 87, 106, 58, 49, 62, 24, 12], [22, 14, 97, 501, 40, 165, 63, 49, 19, 30], [24, 4, 123, 71, 501, 41, 71, 140, 14, 11], [7, 10, 69, 252, 34, 502, 27, 62, 21, 16], [4, 6, 57, 89, 68, 27, 705, 17, 11, 16], [16, 9, 35, 74, 48, 72, 13, 690, 12, 31], [85, 53, 28, 16, 7, 8, 8, 12, 714, 69], [32, 161, 8, 36, 8, 9, 20, 26, 36, 664]]",
        "precision_macro_avg_last_epoch": 0.6249126778162357,
        "recall_macro_avg_last_epoch": 0.6220000000000001,
        "f1_score_macro_avg_last_epoch": 0.6222089266021008,
        "roc_auc_macro_avg_last_epoch": null,
        "per_class_metrics_last_epoch": {
            "0": {
                "precision": 0.6990595611285266,
                "recall": 0.669,
                "f1_score": 0.683699540112417
            },
            "1": {
                "precision": 0.7185398655139289,
                "recall": 0.748,
                "f1_score": 0.7329740323370897
            },
            "2": {
                "precision": 0.5187376725838264,
                "recall": 0.526,
                "f1_score": 0.522343594836147
            },
            "3": {
                "precision": 0.42529711375212226,
                "recall": 0.501,
                "f1_score": 0.46005509641873277
            },
            "4": {
                "precision": 0.6094890510948905,
                "recall": 0.501,
                "f1_score": 0.5499451152579583
            },
            "5": {
                "precision": 0.5621500559910414,
                "recall": 0.502,
                "f1_score": 0.5303750660327522
            },
            "6": {
                "precision": 0.7238193018480493,
                "recall": 0.705,
                "f1_score": 0.7142857142857143
            },
            "7": {
                "precision": 0.6272727272727273,
                "recall": 0.69,
                "f1_score": 0.6571428571428571
            },
            "8": {
                "precision": 0.7175879396984924,
                "recall": 0.714,
                "f1_score": 0.7157894736842105
            },
            "9": {
                "precision": 0.6471734892787524,
                "recall": 0.664,
                "f1_score": 0.6554787759131293
            }
        }
    },
    "notes_observations": "Initial run of LeNet-like model. Achieved good accuracy. Consider more epochs or data augmentation next."
}